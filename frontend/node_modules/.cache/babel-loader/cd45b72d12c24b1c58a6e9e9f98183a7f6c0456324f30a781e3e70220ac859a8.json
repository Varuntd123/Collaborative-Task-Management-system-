{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Varun TD\\\\Desktop\\\\Collabarative task Management system\\\\frontend\\\\src\\\\components\\\\MemberTasksTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MemberTasksTable({\n  userId\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (!userId) return;\n    fetch(`/api/tasks/assignee/${userId}`).then(res => res.json()).then(setTasks).catch(e => setError('Failed to load tasks'));\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%',\n        background: '#fff',\n        borderRadius: 8,\n        boxShadow: '0 2px 8px #eee'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.dueDate ? new Date(task.dueDate).toLocaleDateString() : '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(MemberTasksTable, \"Msao62+6XOI4WpnEzOQWjX5Qfr8=\");\n_c = MemberTasksTable;\nexport default MemberTasksTable;\nvar _c;\n$RefreshReg$(_c, \"MemberTasksTable\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MemberTasksTable","userId","_s","tasks","setTasks","error","setError","fetch","then","res","json","catch","e","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","width","background","borderRadius","boxShadow","map","task","id","title","status","dueDate","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Varun TD/Desktop/Collabarative task Management system/frontend/src/components/MemberTasksTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction MemberTasksTable({ userId }) {\n  const [tasks, setTasks] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!userId) return;\n    fetch(`/api/tasks/assignee/${userId}`)\n      .then(res => res.json())\n      .then(setTasks)\n      .catch(e => setError('Failed to load tasks'));\n  }, [userId]);\n\n  return (\n    <div>\n      <h2>My Tasks</h2>\n      {error && <div style={{color:'red'}}>{error}</div>}\n      <table style={{width:'100%',background:'#fff',borderRadius:8,boxShadow:'0 2px 8px #eee'}}>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Title</th>\n            <th>Status</th>\n            <th>Due Date</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {tasks.map(task => (\n            <tr key={task.id}>\n              <td>{task.id}</td>\n              <td>{task.title}</td>\n              <td>{task.status}</td>\n              <td>{task.dueDate ? new Date(task.dueDate).toLocaleDateString() : '-'}</td>\n              <td>\n                {/* Status update and comment actions will go here */}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default MemberTasksTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}